<!--
   - Copyright(c) 2016 Xuanrui Qi
   - This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/.
-->

<h2>Professional Profile</h2><br>

<p>
    Currently, I'm an undergraduate at Tufts University in the School of Engineering's BSCS Class of 2018.
    I am interested in programming language theory, design and implementation, type theory, concurrency,
    static program analysis, formal logic, and computer vision. See some of the things that I'm 
    recently interested in and/or working on {{#link-to "work-on"}}here{{/link-to}}!
</p>

<p>
    I program in C, <a href="https://www.python.org">Python</a>, <a href="http://www.java.com">Java</a>,
    C++, OCaml, Standard ML, Scheme, <a href="http://www.erlang.org">Erlang</a>,
    <a href="https://www.javascript.com">JavaScript</a>, <a href="https://www.haskell.org">Haskell</a>,
    <a href="http://www.ruby-lang.org">Ruby</a>, and I also do a bit of shell scripting in bash.
    I've programmed websites (for example, this one), <a href="http://www.htc.com/us/smartphones/htc-10/"
    title="currently, it's an HTC 10">my Android phone</a>, and a few UNIX command line applications
    (for fun). Em, I've built a few fun ones too: I have implemented Tetris, Boggle
    (for a class project), and Conway's Game of Life. I am also a student member of the
    <a href="http://www.IEEE.org">IEEE</a> <a href="http://www.computer.org">Computer
    Society</a> and of the <a href="http://www.acm.org">ACM</a>.
</p>

<p>
    Courses that excited me include:
    <ul>
        <li>
            COMP 105: Programming Languages<br>
            Comp 105 was a rather notorious course at Tufts, but thanks to great professors 
            I enjoyed the course a lot. We covered a lot of topics in programming language 
            theory, design, implementation and pragmatics all within one semester: functional 
            programming, continuations, operational semantics (and reasoning about them), 
            type theory, Hindley-Milner type inference, object orientation, lambda calculus, 
            and modularity. My favorite course assignment was implementing type inference 
            with Algorithm W for a statically typed dialect of Scheme. 
        </li>
        <li>
            COMP 40: Machine Structure and Assembly-Language Programming<br>
            Comp 40 was an even more notorious course at Tufts. A course on systems programming 
            and programming more generally, we were given lots of difficult programming problems 
            that required us to write low-level, modular, efficient and correct code. Some of the 
            course projects are listed on the projects page!
        </li>
        <li>
            COMP 50CP: Concurrent Programming<br>
            COMP 50 was a course on, well, concurrency. Besides using threads, we also learned to 
            program concurrently with the actor model. After this course I fell in love with 
            Erlang. 
        </li>
    </ul>
</p>