<!--
   - Copyright(c) 2018 Xuanrui Qi
   - This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/.
-->
<h2>Research</h2><br>
<p>
    I am engaged in quite a few research projects!<br><br>
</p>

<h3>Research Interests</h3>
<p>Roughly in order of decreasing interest:</p>
<ul>
    <li>dependently-typed programming languages</li>
    <li>interactive theorem provers</li>
    <li>program verification &amp; its application to language-based security and system programming</li>
    <li>typed functional programming languages</li>
    <li>semantic models of lambda calculi, especially game-theoretic, category-theoretic, and other unconventional models</li>
    <li>algebraic structures and category theory in programming languages</li>
    </ul>
<p>Besides those, I also have an interest in mathematical logic (particularly model theory) and digital 
   humanities (particularly digital anthropology).</p>
<br>

<h3>Current Research</h3><br>
<div class="card border-light mb-3">
  <div class="card-header bg-light">Verified Compact Data Structures</div>
  <div class="card-body">
    <p class="card-text">
        Verifying certain properties of compact data structures in Coq. Collaborative 
        work with Jacques Garrigue, my host at Nagoya University, and a team at
        <a class="text-tooltip">{{bs-tooltip title="National Institute of Advanced Industrial Science and Technology of Japan (JA: 産業技術総合研究所)" renderInPlace=true}}AIST</a>.
    </p>
  </div>
</div>

<p><b>Note</b>: I am no longer actively involved in the following projects, but I am still contributing 
to these projects occasionally.</p>
<div class="card border-light mb-3">
  <div class="card-header bg-light">Elephant Tracks II</div>
  <div class="card-body">
    <p class="card-text">
        Elephant Tracks II is a dynamic analysis framework for memory in managed 
        programming languages which works by generating a <i>memory trace</i>, i.e. 
        record of object allocations, pointer traces, and object deaths, and it is known 
        that you can do <a href="https://dl.acm.org/citation.cfm?id=2259010">many</a>
        <a href="https://dl.acm.org/citation.cfm?id=3133854">things</a> with those traces.
        With a team of researchers from <a class="text-tooltip">
        {{bs-tooltip title="the DaCapo Tooling Group, led by Kathryn McKinley" renderInPlace=true}}Google</a> 
        and the <a class="text-tooltip">{{bs-tooltip title="Steve Blackburn" renderInPlace=true}}Australian National University</a>,  
        we aspire to bring the utility of memory tracing to more programmers, and to 
        make memory tracing even greater.<br><br>
        Our project is <a href="https://github.com/ElephantTracksProject">on GitHub</a>!
    </p>
  </div>
</div>

<div class="card border-light mb-3">
  <div class="card-header bg-light">JumboViz <i>(tentative name)</i>: visualizing memory traces</div>
  <div class="card-body">
    <p class="card-text">
        We have memory traces now, but what are we going to do with those trillion-line plain text 
        documents? An intuitive approach would be to <i>visualize</i> them. With two other undergraduates
        at Tufts Computer Science, we try to develop good 
        visual representations of memory traces using visualization, data mining and artificial 
        intelligence techniques.
    </p>
  </div>
</div>
<br>

<h3>Professional Membership</h3>
<ul>
    <li>Student member, ACM (Association of Computing Machinery)</li>
    <li>Member, ACM <a href="https://www.sigplan.org">SIGPLAN</a> (Special Interest Group on Programming Languages)</li>
</ul>

<script>
    function hideAbstract(abbr) {
        $('.abstract').filter('#' + abbr).hide();
    }

    function showAbstract(lk) {
        let abbr = $(lk).data("abbr");
        $('.abstract').filter('#' + abbr).show();
    }

    $('.abstract').hide();
</script>